"""
This file is a part of an event-driven trading system that describes the
different types of events that are going through the program. Most of the
events are going to be recognized and routed to the appropriate components
in the app program. So far I am following the tutorial on quantstart.com.
"""

class Event:
    """
    Event is a base class that provides a general interface for the other
    subsequent (inherited) events in the class that will be routed in the app
    file.
    """
    def __init__(self):
        """
        Initializes some of the basic variables that are common in subsequent
        (inherited) classes below. For now the list is short.
        """
        self.type = 'EVENT'

class MarketEvent(Event):
    """
    Event that is generated by the interface for exchanging historical and
    live data. Describes necessary market updates.
    """
    def __init__(self):
        """
        Initializes the type to MARKET. Will be used for routing.
        """
        self.type = 'MARKET'

class SignalEvent(Event):
    """
    """
    def __init__(self):
        """
        Initializes the signal event.
        """
        self.type = 'MARKET'

class OrderEvent(Event):
    """
    """
    def __init__(self):
        """
        """
        self.type = 'MARKET'

class FillEvent(Event):
    """
    """
    def __init__(self):
        """
        """
        self.type = 'MARKET'